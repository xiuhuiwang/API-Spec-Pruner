openapi: 3.0.1
info:
  title: Azure OpenAI API version 2024-06-01
  description: APIs for fine-tuning and managing deployments of OpenAI models.
  version: 2024-06-01
servers:
- url: /
security:
- api-key: []
paths:
  /files:
    get:
      tags:
      - 'Files:'
      summary: "Gets a list of all files owned by the Azure OpenAI resource.\r\nThese\
        \ include user uploaded content like files with purpose \"fine-tune\" for\
        \ training or validation of fine-tunes models\r\nas well as files that are\
        \ generated by the service such as \"fine-tune-results\" which contains various\
        \ metrics for the corresponding fine-tune job."
      operationId: Files_List
      parameters:
      - name: purpose
        in: query
        description: Only return files with the given purpose.
        schema:
          type: string
          enum:
          - fine-tune
          - fine-tune-results
          x-ms-enum:
            name: Purpose
            modelAsString: true
            values:
            - value: fine-tune
              description: This file contains training data for a fine tune job.
            - value: fine-tune-results
              description: This file contains the results of a fine tune job.
        x-ms-enum:
          name: Purpose
          modelAsString: true
          values:
          - value: fine-tune
            description: This file contains training data for a fine tune job.
          - value: fine-tune-results
            description: This file contains the results of a fine tune job.
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all files owned by this account.:
          $ref: ./examples/get_files.json
    post:
      tags:
      - 'Files:'
      summary: "Creates a new file entity by uploading data from a local machine.\
        \ Uploaded files can, for example, be used for training or evaluating fine-tuned\
        \ models."
      operationId: Files_Upload
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              - purpose
              type: object
              properties:
                purpose:
                  type: string
                  description: The intended purpose of the uploaded documents. Use
                    "fine-tune" for fine-tuning. This allows us to validate the format
                    of the uploaded file.
                  enum:
                  - fine-tune
                  - fine-tune-results
                  x-ms-enum:
                    name: Purpose
                    modelAsString: true
                    values:
                    - value: fine-tune
                      description: This file contains training data for a fine tune
                        job.
                    - value: fine-tune-results
                      description: This file contains the results of a fine tune job.
                file:
                  type: string
                  description: Gets or sets the file to upload into Azure OpenAI.
                  format: binary
        required: true
      responses:
        "201":
          description: The file has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Upload a file.:
          $ref: ./examples/upload_file.json
  /files/{file-id}:
    get:
      tags:
      - 'Files:'
      summary: "Gets details for a single file specified by the given file-id including\
        \ status, size, purpose, etc."
      operationId: Files_Get
      parameters:
      - name: file-id
        in: path
        description: The identifier of the file.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a file.:
          $ref: ./examples/get_file.json
    delete:
      tags:
      - 'Files:'
      summary: "Deletes the file with the given file-id.\r\nDeletion is also allowed\
        \ if a file was used, e.g., as training file in a fine-tune job."
      operationId: Files_Delete
      parameters:
      - name: file-id
        in: path
        description: The identifier of the file.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "204":
          description: The file was successfully deleted.
          content: {}
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Deleting a file.:
          $ref: ./examples/delete_file.json
  /files/{file-id}/content:
    get:
      tags:
      - 'Files:'
      summary: "Gets the content of the file specified by the given file-id.\r\nFiles\
        \ can be user uploaded content or generated by the service like result metrics\
        \ of a fine-tune job."
      operationId: Files_GetContent
      parameters:
      - name: file-id
        in: path
        description: The identifier of the file.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: An error occurred.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting the file content.:
          $ref: ./examples/get_file_content.json
  /files/import:
    post:
      tags:
      - 'Files:'
      summary: "Creates a new file entity by importing data from a provided url. Uploaded\
        \ files can, for example, be used for training or evaluating fine-tuned models."
      operationId: Files_Import
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      requestBody:
        description: "The definition of the file to create including its purpose,\
          \ the file name and the url of the file location."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileImport'
        required: true
      responses:
        "201":
          description: The file has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Importing a file with a blob url as source.:
          $ref: ./examples/import_file.json
      x-codegen-request-body-name: fileImport
  /fine_tuning/jobs:
    get:
      tags:
      - 'Fine-tuning:'
      summary: "Gets a list of all fine-tune jobs owned by the Azure OpenAI resource.\r\
        \nThe details that are returned for each fine-tune job contain besides its\
        \ identifier\r\nthe base model, training and validation files, hyper parameters,\
        \ time stamps, status and events.\r\nEvents are created when the job status\
        \ changes, e.g. running or complete, and when results are uploaded."
      operationId: FineTuning_List
      parameters:
      - name: after
        in: query
        description: Identifier for the last event from the previous pagination request.
        schema:
          type: string
      - name: limit
        in: query
        description: Number of events to retrieve. Defaults to 20.
        schema:
          type: integer
          format: int32
          default: 20
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJobList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all fine tuning jobs owned by this account.:
          $ref: ./examples/get_finetuning_jobs.json
    post:
      tags:
      - 'Fine-tuning:'
      summary: "Creates a job that fine-tunes a specified model from a given training\
        \ file.\r\nResponse includes details of the enqueued job including job status\
        \ and hyper parameters.\r\nThe name of the fine-tuned model is added to the\
        \ response once complete."
      operationId: FineTuning_Create
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      requestBody:
        description: "The specification of the fine-tuned model to create.\r\nRequired\
          \ parameters are the base model and the training file to use.\r\nOptionally\
          \ a validation file can be specified to compute validation metrics during\
          \ training.\r\nHyper parameters will be set to default values or can be\
          \ optionally specified.\r\nThese include batch size, learning rate multiplier,\
          \ number of epochs and others."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FineTuningJobCreation'
        required: true
      responses:
        "201":
          description: The fine tune has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJob'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Creating a fine tuning job.:
          $ref: ./examples/post_finetuning_job.json
      x-codegen-request-body-name: fineTuningJob
  /fine_tuning/jobs/{fine-tuning-job-id}:
    get:
      tags:
      - 'Fine-tuning:'
      summary: "Gets details for a single fine-tune job specified by the given fine-tune-id.\r\
        \nThe details contain the base model, training and validation files, hyper\
        \ parameters, time stamps, status and events.\r\nEvents are created when the\
        \ job status changes, e.g. running or complete, and when results are uploaded."
      operationId: FineTuning_Get
      parameters:
      - name: fine-tuning-job-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJob'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a fine tuning job.:
          $ref: ./examples/get_finetuning_job.json
    delete:
      tags:
      - 'Fine-tuning:'
      summary: Deletes the fine-tune job specified by the given fine-tune-id.
      operationId: FineTuning_Delete
      parameters:
      - name: fine-tuning-job-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "204":
          description: The fine tune was successfully deleted.
          content: {}
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Deleting a fine tuning job.:
          $ref: ./examples/delete_finetuning_job.json
  /fine_tuning/jobs/{fine-tuning-job-id}/events:
    get:
      tags:
      - 'Fine-tuning:'
      summary: "Gets the events for the fine-tune job specified by the given fine-tune-id.\r\
        \nEvents are created when the job status changes, e.g. running or complete,\
        \ and when results are uploaded."
      operationId: FineTuning_GetEvents
      parameters:
      - name: fine-tuning-job-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: after
        in: query
        description: Identifier for the last event from the previous pagination request.
        schema:
          type: string
      - name: limit
        in: query
        description: Number of events to retrieve. Defaults to 20.
        schema:
          type: integer
          format: int32
          default: 20
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJobEventList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting events of a fine tuning job.:
          $ref: ./examples/get_finetuning_job_events.json
  /fine_tuning/jobs/{fine-tuning-job-id}/checkpoints:
    get:
      tags:
      - 'Fine-tuning:'
      summary: "Gets the checkpoints for the fine-tune job specified by the given\
        \ fine-tune-id.\r\nCheckpoints are created at the end of successful epochs\
        \ during training."
      operationId: FineTuning_GetCheckpoints
      parameters:
      - name: fine-tuning-job-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: after
        in: query
        description: Identifier for the last checkpoint ID from the previous pagination
          request.
        schema:
          type: string
      - name: limit
        in: query
        description: Number of checkpoints to retrieve. Defaults to 10.
        schema:
          type: integer
          format: int32
          default: 10
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJobCheckpointList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting checkpoints of a fine tuning job.:
          $ref: ./examples/get_finetuning_job_checkpoints.json
  /fine_tuning/jobs/{fine-tuning-job-id}/cancel:
    post:
      tags:
      - 'Fine-tuning:'
      summary: Cancels the processing of the fine-tune job specified by the given
        fine-tune-id.
      operationId: FineTuning_Cancel
      parameters:
      - name: fine-tuning-job-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: The fine tune has been successfully canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJob'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Canceling a fine tuning job.:
          $ref: ./examples/cancel_finetuning_job.json
  /models:
    get:
      tags:
      - 'Models:'
      summary: "Gets a list of all models that are accessible by the Azure OpenAI\
        \ resource.\r\nThese include base models as well as all successfully completed\
        \ fine-tuned models owned by the Azure OpenAI resource."
      operationId: Models_List
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all models owned by account.:
          $ref: ./examples/get_models.json
  /models/{model-id}:
    get:
      tags:
      - 'Models:'
      summary: Gets details for the model specified by the given modelId.
      operationId: Models_Get
      parameters:
      - name: model-id
        in: path
        description: The identifier of the model.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2024-06-01
          x-ms-parameter-location: client
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a base model.:
          $ref: ./examples/get_model_base.json
        Getting a fine-tuned model.:
          $ref: ./examples/get_model_finetune.json
components:
  schemas:
    Capabilities:
      title: Capabilities
      required:
      - chat_completion
      - completion
      - embeddings
      - fine_tune
      - inference
      type: object
      properties:
        fine_tune:
          type: boolean
          description: A value indicating whether a model can be used for fine tuning.
        inference:
          type: boolean
          description: A value indicating whether a model can be deployed.
        completion:
          type: boolean
          description: A value indicating whether a model supports completion.
        chat_completion:
          type: boolean
          description: A value indicating whether a model supports chat completion.
        embeddings:
          type: boolean
          description: A value indicating whether a model supports embeddings.
      description: The capabilities of a base or fine tune model.
    Deprecation:
      title: Deprecation
      required:
      - inference
      type: object
      properties:
        fine_tune:
          type: integer
          description: The end date of fine tune support of this model. Will be `null`
            for fine tune models.
          format: unixtime
        inference:
          type: integer
          description: The end date of inference support of this model.
          format: unixtime
      description: "Defines the dates of deprecation for the different use cases of\
        \ a model.\r\nUsually base models support 1 year of fine tuning after creation.\
        \ Inference is typically supported 2 years after creation of base or\r\nfine\
        \ tuned models. The exact dates are specified in the properties."
    Error:
      title: Error
      required:
      - code
      - message
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          minLength: 1
          type: string
          description: The message of this error.
        target:
          type: string
          description: The location where the error happened if available.
        details:
          type: array
          description: The error details if available.
          items:
            $ref: '#/components/schemas/Error'
        innererror:
          $ref: '#/components/schemas/InnerError'
      description: "Error content as defined in the Microsoft REST guidelines\r\n\
        (https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
    ErrorCode:
      title: ErrorCode
      type: string
      description: "Error codes as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
      enum:
      - conflict
      - invalidPayload
      - forbidden
      - notFound
      - unexpectedEntityState
      - itemDoesAlreadyExist
      - serviceUnavailable
      - internalFailure
      - quotaExceeded
      - jsonlValidationFailed
      - fileImportFailed
      - tooManyRequests
      - unauthorized
      - contentFilter
      x-ms-enum:
        name: ErrorCode
        modelAsString: true
        values:
        - value: conflict
          description: The requested operation conflicts with the current resource
            state.
        - value: invalidPayload
          description: The request data is invalid for this operation.
        - value: forbidden
          description: The operation is forbidden for the current user/api key.
        - value: notFound
          description: The resource is not found.
        - value: unexpectedEntityState
          description: The operation cannot be executed in the current resource's
            state.
        - value: itemDoesAlreadyExist
          description: The item does already exist.
        - value: serviceUnavailable
          description: The service is currently not available.
        - value: internalFailure
          description: Internal error. Please retry.
        - value: quotaExceeded
          description: Quota exceeded.
        - value: jsonlValidationFailed
          description: Validation of jsonl data failed.
        - value: fileImportFailed
          description: Import of file failed.
        - value: tooManyRequests
          description: Too many requests. Please retry later.
        - value: unauthorized
          description: The current user/api key is not authorized for the operation.
        - value: contentFilter
          description: Image generation failed as a result of our safety system.
    ErrorResponse:
      title: ErrorResponse
      required:
      - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
      description: "Error response as defined in the Microsoft REST guidelines\r\n\
        (https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
    EventType:
      title: EventType
      type: string
      description: Defines the severity of a content filter result.
      enum:
      - message
      - metrics
      x-ms-enum:
        name: EventType
        modelAsString: true
        values:
        - value: message
          description: Event only contains human readable messages.
        - value: metrics
          description: Event contains metrics.
    File:
      title: File
      required:
      - filename
      - purpose
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        status:
          $ref: '#/components/schemas/FileState'
        bytes:
          type: integer
          description: "The size of this file when available (can be null). File sizes\
            \ larger than 2^53-1 are not supported to ensure compatibility\r\nwith\
            \ JavaScript integers."
          format: int64
          readOnly: true
        purpose:
          $ref: '#/components/schemas/Purpose'
        filename:
          minLength: 1
          type: string
          description: The name of the file.
        status_details:
          type: string
          description: The error message with details in case processing of this file
            failed.
          readOnly: true
      description: A file is a document usable for training and validation. It can
        also be a service generated document with result details.
    FileImport:
      title: FileImport
      required:
      - content_url
      - filename
      - purpose
      type: object
      properties:
        purpose:
          $ref: '#/components/schemas/Purpose'
        filename:
          minLength: 1
          type: string
          description: "The name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/)\
            \ file to be uploaded.\r\nIf the `purpose` is set to \"fine-tune\", each\
            \ line is a JSON record with \"prompt\" and \"completion\" fields representing\
            \ your training examples."
        content_url:
          type: string
          description: The url to download the document from (can be SAS url of a
            blob or any other external url accessible with a GET request).
          format: url
      description: Defines a document to import from an external content url to be
        usable with Azure OpenAI.
    FileList:
      title: FileList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/File'
      description: Represents a list of files.
    FileState:
      title: FileState
      type: string
      description: The state of a file.
      enum:
      - uploaded
      - pending
      - running
      - processed
      - error
      - deleting
      - deleted
      x-ms-enum:
        name: FileState
        modelAsString: true
        values:
        - value: uploaded
          description: The file has been uploaded but it's not yet processed. This
            state is not returned by Azure OpenAI and exposed only for compatibility.
            It can be categorized as an inactive state.
        - value: pending
          description: The operation was created and is not queued to be processed
            in the future. It can be categorized as an inactive state.
        - value: running
          description: The operation has started to be processed. It can be categorized
            as an active state.
        - value: processed
          description: The operation has successfully be processed and is ready for
            consumption. It can be categorized as a terminal state.
        - value: error
          description: The operation has completed processing with a failure and cannot
            be further consumed. It can be categorized as a terminal state.
        - value: deleting
          description: The entity is ni the process to be deleted. This state is not
            returned by Azure OpenAI and exposed only for compatibility. It can be
            categorized as an active state.
        - value: deleted
          description: The entity has been deleted but may still be referenced by
            other entities predating the deletion. It can be categorized as a terminal
            state.
    FineTuningHyperParameters:
      title: FineTuningHyperParameters
      type: object
      properties:
        n_epochs:
          type: integer
          description: The number of epochs to train the model for. An epoch refers
            to one full cycle through the training dataset.
          format: int32
        batch_size:
          type: integer
          description: "The batch size to use for training. The batch size is the\
            \ number of training examples used to train a single forward and backward\
            \ pass.\r\nIn general, we've found that larger batch sizes tend to work\
            \ better for larger datasets.\r\nThe default value as well as the maximum\
            \ value for this property are specific to a base model."
          format: int32
        learning_rate_multiplier:
          type: number
          description: "The learning rate multiplier to use for training. The fine-tuning\
            \ learning rate is the original learning rate used for pre-training multiplied\
            \ by this value.\r\nLarger learning rates tend to perform better with\
            \ larger batch sizes.\r\nWe recommend experimenting with values in the\
            \ range 0.02 to 0.2 to see what produces the best results."
          format: double
      description: The hyper parameter settings used in a fine tune job.
    FineTuningJob:
      title: FineTuningJob
      required:
      - model
      - training_file
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        status:
          $ref: '#/components/schemas/FineTuningState'
        model:
          minLength: 1
          type: string
          description: The identifier (model-id) of the base model used for the fine-tune.
        fine_tuned_model:
          type: string
          description: "The identifier (model-id) of the resulting fine tuned model.\
            \ This property is only populated for successfully completed fine-tune\
            \ runs.\r\nUse this identifier to create a deployment for inferencing."
        training_file:
          minLength: 1
          type: string
          description: The file which is used for training.
        validation_file:
          type: string
          description: The file which is used to evaluate the fine tuned model during
            training.
        result_files:
          type: array
          description: "The result file identities (file-id) containing training and\
            \ evaluation metrics in csv format.\r\nThe file is only available for\
            \ successfully completed fine-tune runs."
          items:
            type: string
        finished_at:
          type: integer
          description: A timestamp when this job or item has finished successfully
            (in unix epochs).
          format: int32
          readOnly: true
        organisation_id:
          type: string
          description: The organisation id of this fine tune job. Unused on Azure
            OpenAI; compatibility for OpenAI only.
        trained_tokens:
          type: integer
          description: The total number of billable tokens processed by this fine
            tuning job.
          format: int32
          readOnly: true
        error:
          $ref: '#/components/schemas/FineTuningJobError'
        estimated_finish:
          type: integer
          description: The Unix timestamp (in seconds) for when the fine-tuning job
            is estimated to finish. The value will be null if the fine-tuning job
            is not running.
          format: int32
        hyperparameters:
          $ref: '#/components/schemas/FineTuningHyperParameters'
        suffix:
          type: string
          description: "The suffix used to identify the fine-tuned model. The suffix\
            \ can contain up to 40 characters (a-z, A-Z, 0-9,- and _) that will be\
            \ added to your fine-tuned model name."
        seed:
          type: integer
          description: The seed used for the finetuning job.
          format: int32
      description: Defines the values of a fine tune job.
    FineTuningJobCheckpoint:
      title: FineTuningJobCheckpoint
      required:
      - created_at
      - fine_tuned_model_checkpoint
      - fine_tuning_job_id
      - metrics
      - step_number
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        id:
          type: string
          description: The identity of this checkpoint.
          readOnly: true
        created_at:
          type: integer
          description: The Unix timestamp (in seconds) for when the checkpoint was
            created.
          format: unixtime
        fine_tuned_model_checkpoint:
          minLength: 1
          type: string
          description: The name of the fine-tuned checkpoint model that is created.
        step_number:
          type: integer
          description: The step number that the checkpoint was created at.
          format: int32
        metrics:
          title: Dictionary`2
          type: object
          additionalProperties:
            type: number
            format: double
          description: The metrics at the step number during the fine-tuning job.
        fine_tuning_job_id:
          minLength: 1
          type: string
          description: The name of the fine-tuning job that this checkpoint was created
            from..
    FineTuningJobCheckpointList:
      title: FineTuningJobCheckpointList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/FineTuningJobCheckpoint'
        has_more:
          type: boolean
          description: A value indicating whether the list contains more elements
            than returned.
      description: Represents a list of checkpoints.
    FineTuningJobCreation:
      title: FineTuningJobCreation
      required:
      - model
      - training_file
      type: object
      properties:
        model:
          minLength: 1
          type: string
          description: The identifier (model-id) of the base model used for this fine-tune.
        training_file:
          minLength: 1
          type: string
          description: The file identity (file-id) that is used for training this
            fine tuned model.
        validation_file:
          type: string
          description: The file identity (file-id) that is used to evaluate the fine
            tuned model during training.
        hyperparameters:
          $ref: '#/components/schemas/FineTuningHyperParameters'
        suffix:
          type: string
          description: "The suffix used to identify the fine-tuned model. The suffix\
            \ can contain up to 40 characters (a-z, A-Z, 0-9,- and _) that will be\
            \ added to your fine-tuned model name."
        seed:
          type: integer
          description: "The seed used for the finetuning job. Passing in the same\
            \ seed and job parameters should produce the same results, but may differ\
            \ in rare cases. If a seed is not specified, one will be generated for\
            \ you."
          format: int32
      description: Defines the values of a fine tune job.
    FineTuningJobError:
      title: FineTuningJobError
      type: object
      properties:
        code:
          type: string
          description: The machine-readable error code..
        message:
          type: string
          description: The human-readable error message.
        param:
          type: string
          description: "The parameter that was invalid, usually training_file or validation_file.\
            \ This field will be null if the failure was not parameter-specific."
      description: "For fine-tuning jobs that have failed, this will contain more\
        \ information on the cause of the failure."
    FineTuningJobEvent:
      title: FineTuningJobEvent
      required:
      - created_at
      - level
      - message
      - type
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        id:
          type: string
          description: The identity of this event.
          readOnly: true
        created_at:
          type: integer
          description: A timestamp when this event was created (in unix epochs).
          format: unixtime
        level:
          $ref: '#/components/schemas/LogLevel'
        message:
          minLength: 1
          type: string
          description: "The message describing the event. This can be a change of\
            \ state, e.g., enqueued, started, failed or completed, or other events\
            \ like uploaded results."
        type:
          $ref: '#/components/schemas/EventType'
        data:
          type: object
          description: Machine readable data of this event.
    FineTuningJobEventList:
      title: FineTuningJobEventList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/FineTuningJobEvent'
        has_more:
          type: boolean
          description: A value indicating whether the list contains more elements
            than returned.
      description: Represents a list of events.
    FineTuningJobList:
      title: FineTuningJobList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/FineTuningJob'
        has_more:
          type: boolean
          description: A value indicating whether the list contains more elements
            than returned.
      description: Represents a list of fine tunes.
    FineTuningState:
      title: FineTuningState
      type: string
      description: The state of a finetunes object or fine tuning job.
      enum:
      - created
      - pending
      - running
      - succeeded
      - cancelled
      - failed
      x-ms-enum:
        name: FineTuningState
        modelAsString: true
        values:
        - value: created
          description: The operation was created. This state is not returned by Azure
            OpenAI and exposed only for compatibility. It can be categorized as an
            inactive state.
        - value: pending
          description: The operation is not yet queued to be processed in the future.
            It can be categorized as an inactive state.
        - value: running
          description: The operation has started to be processed. It can be categorized
            as an active state.
        - value: succeeded
          description: The operation has successfully be processed and is ready for
            consumption. It can be categorized as a terminal state.
        - value: cancelled
          description: The operation has been cancelled and is incomplete. It can
            be categorized as a terminal state.
        - value: failed
          description: The operation has completed processing with a failure and cannot
            be further consumed. It can be categorized as a terminal state.
    InnerError:
      title: InnerError
      type: object
      properties:
        code:
          $ref: '#/components/schemas/InnerErrorCode'
        innererror:
          $ref: '#/components/schemas/InnerError'
      description: "Inner error as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
    InnerErrorCode:
      title: InnerErrorCode
      type: string
      description: "Inner error codes as defined in the Microsoft REST guidelines\r\
        \n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
      enum:
      - invalidPayload
      x-ms-enum:
        name: InnerErrorCode
        modelAsString: true
        values:
        - value: invalidPayload
          description: The request data is invalid for this operation.
    LifeCycleStatus:
      title: LifeCycleStatus
      type: string
      description: "The life cycle status of a model.\r\nNote: A model can be promoted\
        \ from \"preview\" to \"generally-available\", but never from \"generally-available\"\
        \ to \"preview\"."
      enum:
      - preview
      - generally-available
      x-ms-enum:
        name: LifeCycleStatus
        modelAsString: true
        values:
        - value: preview
          description: Model is in preview and covered by the service preview terms.
        - value: generally-available
          description: Model is generally available.
    LogLevel:
      title: LogLevel
      type: string
      description: The verbosity level of an event.
      enum:
      - info
      - warning
      - error
      x-ms-enum:
        name: LogLevel
        modelAsString: true
        values:
        - value: info
          description: This event is for information only.
        - value: warning
          description: This event represents a mitigated issue.
        - value: error
          description: This message represents a non recoverable issue.
    Model:
      title: Model
      required:
      - capabilities
      - deprecation
      - lifecycle_status
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        status:
          $ref: '#/components/schemas/FineTuningState'
        model:
          type: string
          description: The base model identity (model-id) if this is a fine tune model;
            otherwise `null`.
        fine_tune:
          type: string
          description: The fine tune job identity (fine-tune-id) if this is a fine
            tune model; otherwise `null`.
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        lifecycle_status:
          $ref: '#/components/schemas/LifeCycleStatus'
        deprecation:
          $ref: '#/components/schemas/Deprecation'
      description: A model is either a base model or the result of a successful fine
        tune job.
    ModelList:
      title: ModelList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Model'
      description: Represents a list of models.
    OperationState:
      title: OperationState
      type: string
      description: The state of a job or item.
      enum:
      - notRunning
      - running
      - succeeded
      - failed
      x-ms-enum:
        name: OperationState
        modelAsString: true
        values:
        - value: notRunning
          description: The operation is not yet queued to be processed in the future.
        - value: running
          description: The operation has started to be processed.
        - value: succeeded
          description: The operation has successfully be processed and is ready for
            consumption.
        - value: failed
          description: The operation has completed processing with a failure and cannot
            be further consumed.
    Purpose:
      title: Purpose
      type: string
      description: The intended purpose of the uploaded documents. Use "fine-tune"
        for fine-tuning. This allows us to validate the format of the uploaded file.
      enum:
      - fine-tune
      - fine-tune-results
      x-ms-enum:
        name: Purpose
        modelAsString: true
        values:
        - value: fine-tune
          description: This file contains training data for a fine tune job.
        - value: fine-tune-results
          description: This file contains the results of a fine tune job.
    TypeDiscriminator:
      title: TypeDiscriminator
      type: string
      description: Defines the type of an object.
      enum:
      - list
      - fine_tuning.job
      - file
      - fine_tuning.job.event
      - fine_tuning.job.checkpoint
      - model
      x-ms-enum:
        name: TypeDiscriminator
        modelAsString: true
        values:
        - value: list
          description: This object represents a list of other objects.
        - value: fine_tuning.job
          description: This object represents a fine tune job.
        - value: file
          description: This object represents a file.
        - value: fine_tuning.job.event
          description: This object represents an event of a fine tuning job.
        - value: fine_tuning.job.checkpoint
          description: This object represents a checkpoint of a fine tuning job.
        - value: model
          description: This object represents a model (can be a base model or fine
            tune job result).
  parameters:
    endpoint:
      name: endpoint
      in: path
      description: "Supported Cognitive Services endpoints (protocol and hostname,\
        \ for example: https://aoairesource.openai.azure.com. Replace \"aoairesource\"\
        \ with your Azure OpenAI account name)."
      required: true
      schema:
        type: string
        format: url
        x-ms-skip-url-encoding: true
        x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
    apiVersionQueryParameter:
      name: api-version
      in: query
      description: The requested API version.
      required: true
      schema:
        type: string
        x-ms-client-default: 2024-06-01
        x-ms-parameter-location: client
      x-ms-client-default: 2024-06-01
      x-ms-parameter-location: client
  securitySchemes:
    api-key:
      type: apiKey
      description: Provide your Cognitive Services Azure OpenAI account key here.
      name: api-key
      in: header
x-ms-parameterized-host:
  hostTemplate: "{endpoint}/openai"
  useSchemePrefix: false
  parameters:
  - $ref: '#/parameters/endpoint'
x-original-swagger-version: "2.0"
