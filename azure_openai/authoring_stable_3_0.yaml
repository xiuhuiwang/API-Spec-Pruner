openapi: 3.0.1
info:
  title: Azure OpenAI API version 2022-12-01
  description: APIs for fine-tuning and managing deployments of OpenAI models.
  version: 2022-12-01
servers:
- url: /
security:
- api-key: []
paths:
  /deployments:
    get:
      tags:
      - 'Deployments:'
      summary: Gets the list of deployments owned by the Azure OpenAI resource.
      operationId: Deployments_List
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all deployments owned by account.:
          $ref: ./examples/get_deployments.json
    post:
      tags:
      - 'Deployments:'
      summary: Creates a new deployment for the Azure OpenAI resource according to
        the given specification.
      operationId: Deployments_Create
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      requestBody:
        description: The specification of the deployment including the model to deploy
          and the scale settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      responses:
        "201":
          description: The deployment has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Creating a deployment.:
          $ref: ./examples/post_deployment.json
      x-codegen-request-body-name: deployment
  /deployments/{deployment-id}:
    get:
      tags:
      - 'Deployments:'
      summary: Gets details for a single deployment specified by the given deployment-id.
      operationId: Deployments_Get
      parameters:
      - name: deployment-id
        in: path
        description: The identifier of the deployment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a specific deployment.:
          $ref: ./examples/get_deployment.json
    delete:
      tags:
      - 'Deployments:'
      summary: Deletes the deployment specified by the given deployment-id.
      operationId: Deployments_Delete
      parameters:
      - name: deployment-id
        in: path
        description: The identifier of the deployment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "204":
          description: The deployment was successfully deleted.
          content: {}
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Deleting a deployment.:
          $ref: ./examples/delete_deployment.json
    patch:
      tags:
      - 'Deployments:'
      summary: Updates the mutable details of the deployment with the given deployment-id.
      operationId: Deployments_Update
      parameters:
      - name: deployment-id
        in: path
        description: The identifier of the deployment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      requestBody:
        description: The updated values for the deployment.
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/DeploymentUpdate'
        required: true
      responses:
        "200":
          description: The update process was successfully started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        "409":
          description: The specified deployment does not exist or is in a non-terminal
            state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          x-ms-error-response: true
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Updating an existing deployment with less capacity:
          $ref: ./examples/patch_deployment_less_capacity.json
      x-codegen-request-body-name: deployment
  /files:
    get:
      tags:
      - 'Files:'
      summary: "Gets a list of all files owned by the Azure OpenAI resource.\r\nThese\
        \ include user uploaded content like files with purpose \"fine-tune\" for\
        \ training or validation of fine-tunes models\r\nas well as files that are\
        \ generated by the service such as \"fine-tune-results\" which contains various\
        \ metrics for the corresponding fine-tune job."
      operationId: Files_List
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all files owned by this account.:
          $ref: ./examples/get_files.json
    post:
      tags:
      - 'Files:'
      summary: "Creates a new file entity by uploading data from a local machine.\
        \ Uploaded files can, for example, be used for training or evaluating fine-tuned\
        \ models."
      operationId: Files_Upload
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              - purpose
              type: object
              properties:
                purpose:
                  type: string
                  description: The intended purpose of the uploaded documents. Use
                    "fine-tune" for fine-tuning. This allows us to validate the format
                    of the uploaded file.
                  enum:
                  - fine-tune
                  - fine-tune-results
                  x-ms-enum:
                    name: Purpose
                    modelAsString: true
                    values:
                    - value: fine-tune
                      description: This file contains training data for a fine tune
                        job.
                    - value: fine-tune-results
                      description: This file contains the results of a fine tune job.
                file:
                  type: string
                  description: Gets or sets the file to upload into Azure OpenAI.
                  format: binary
        required: true
      responses:
        "201":
          description: The file has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Upload a file.:
          $ref: ./examples/upload_file.json
  /files/{file-id}:
    get:
      tags:
      - 'Files:'
      summary: "Gets details for a single file specified by the given file-id including\
        \ status, size, purpose, etc."
      operationId: Files_Get
      parameters:
      - name: file-id
        in: path
        description: The identifier of the file.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a file.:
          $ref: ./examples/get_file.json
    delete:
      tags:
      - 'Files:'
      summary: "Deletes the file with the given file-id.\r\nDeletion is also allowed\
        \ if a file was used, e.g., as training file in a fine-tune job."
      operationId: Files_Delete
      parameters:
      - name: file-id
        in: path
        description: The identifier of the file.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "204":
          description: The file was successfully deleted.
          content: {}
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Deleting a file.:
          $ref: ./examples/delete_file.json
  /files/{file-id}/content:
    get:
      tags:
      - 'Files:'
      summary: "Gets the content of the file specified by the given file-id.\r\nFiles\
        \ can be user uploaded content or generated by the service like result metrics\
        \ of a fine-tune job."
      operationId: Files_GetContent
      parameters:
      - name: file-id
        in: path
        description: The identifier of the file.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: An error occurred.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting the file content.:
          $ref: ./examples/get_file_content.json
  /files/import:
    post:
      tags:
      - 'Files:'
      summary: "Creates a new file entity by importing data from a provided url. Uploaded\
        \ files can, for example, be used for training or evaluating fine-tuned models."
      operationId: Files_Import
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      requestBody:
        description: "The definition of the file to create including its purpose,\
          \ the file name and the url of the file location."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileImport'
        required: true
      responses:
        "201":
          description: The file has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Importing a file with a blob url as source.:
          $ref: ./examples/import_file.json
      x-codegen-request-body-name: fileImport
  /fine-tunes:
    get:
      tags:
      - 'Fine-tunes:'
      summary: "Gets a list of all fine-tune jobs owned by the Azure OpenAI resource.\r\
        \nThe details that are returned for each fine-tune job contain besides its\
        \ identifier\r\nthe base model, training and validation files, hyper parameters,\
        \ time stamps, status and events.\r\nEvents are created when the job status\
        \ changes, e.g. running or complete, and when results are uploaded."
      operationId: FineTunes_List
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuneList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all fine tune jobs owned by this account.:
          $ref: ./examples/get_finetunes.json
    post:
      tags:
      - 'Fine-tunes:'
      summary: "Creates a job that fine-tunes a specified model from a given training\
        \ file.\r\nResponse includes details of the enqueued job including job status\
        \ and hyper parameters.\r\nThe name of the fine-tuned model is added to the\
        \ response once complete."
      operationId: FineTunes_Create
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      requestBody:
        description: "The specification of the fine-tuned model to create.\r\nRequired\
          \ parameters are the base model and the training file to use.\r\nOptionally\
          \ a validation file can be specified to compute validation metrics during\
          \ training.\r\nHyper parameters will be set to default values or can by\
          \ optionally specified.\r\nThese include batch size, learning rate multiplier,\
          \ number of epochs and others."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FineTuneCreation'
        required: true
      responses:
        "201":
          description: The fine tune has been successfully created.
          headers:
            Location:
              description: The location of the newly created item.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTune'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Creating a fine tune job.:
          $ref: ./examples/post_finetune.json
        Creating a fine tune job for classification.:
          $ref: ./examples/post_classification_finetune.json
      x-codegen-request-body-name: fineTune
  /fine-tunes/{fine-tune-id}:
    get:
      tags:
      - 'Fine-tunes:'
      summary: "Gets details for a single fine-tune job specified by the given fine-tune-id.\r\
        \nThe details contain the base model, training and validation files, hyper\
        \ parameters, time stamps, status and events.\r\nEvents are created when the\
        \ job status changes, e.g. running or complete, and when results are uploaded."
      operationId: FineTunes_Get
      parameters:
      - name: fine-tune-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTune'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a fine tune job.:
          $ref: ./examples/get_finetune.json
    delete:
      tags:
      - 'Fine-tunes:'
      summary: Deletes the fine-tune job specified by the given fine-tune-id.
      operationId: FineTunes_Delete
      parameters:
      - name: fine-tune-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "204":
          description: The fine tune was successfully deleted.
          content: {}
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Deleting a fine tune job.:
          $ref: ./examples/delete_finetune.json
  /fine-tunes/{fine-tune-id}/events:
    get:
      tags:
      - 'Fine-tunes:'
      summary: "Gets the events for the fine-tune job specified by the given fine-tune-id.\r\
        \nEvents are created when the job status changes, e.g. running or complete,\
        \ and when results are uploaded."
      operationId: FineTunes_GetEvents
      parameters:
      - name: fine-tune-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: stream
        in: query
        description: "A flag indicating whether to stream events for the fine-tune\
          \ job. If set to true,\r\n            events will be sent as data-only server-sent\
          \ events as they become available. The stream will terminate with\r\n  \
          \          a data: [DONE] message when the job is finished (succeeded, cancelled,\
          \ or failed).\r\n            If set to false, only events generated so far\
          \ will be returned.."
        schema:
          type: boolean
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/EventList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting events of a fine tune job.:
          $ref: ./examples/get_finetune_events.json
  /fine-tunes/{fine-tune-id}/cancel:
    post:
      tags:
      - 'Fine-tunes:'
      summary: Cancels the processing of the fine-tune job specified by the given
        fine-tune-id.
      operationId: FineTunes_Cancel
      parameters:
      - name: fine-tune-id
        in: path
        description: The identifier of the fine-tune job.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: The fine tune has been successfully canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTune'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Canceling a fine tune job.:
          $ref: ./examples/cancel_finetune.json
  /models:
    get:
      tags:
      - 'Models:'
      summary: "Gets a list of all models that are accessible by the Azure OpenAI\
        \ resource.\r\nThese include base models as well as all successfully completed\
        \ fine-tuned models owned by the Azure OpenAI resource."
      operationId: Models_List
      parameters:
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelList'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting all models owned by account.:
          $ref: ./examples/get_models.json
  /models/{model-id}:
    get:
      tags:
      - 'Models:'
      summary: Gets details for the model specified by the given modelId.
      operationId: Models_Get
      parameters:
      - name: model-id
        in: path
        description: The identifier of the model.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: The requested API version.
        required: true
        schema:
          type: string
          x-ms-client-default: 2022-12-01
          x-ms-parameter-location: client
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-examples:
        Getting a base model.:
          $ref: ./examples/get_model_base.json
        Getting a fine-tuned model.:
          $ref: ./examples/get_model_finetune.json
components:
  schemas:
    Capabilities:
      title: Capabilities
      required:
      - completion
      - embeddings
      - fine_tune
      - inference
      - scale_types
      type: object
      properties:
        fine_tune:
          type: boolean
          description: A value indicating whether a model can be used for fine tuning.
        inference:
          type: boolean
          description: A value indicating whether a model can be deployed.
        completion:
          type: boolean
          description: A value indicating whether a model supports completion.
        embeddings:
          type: boolean
          description: A value indicating whether a model supports embeddings.
        scale_types:
          type: array
          description: The supported scale types for deployments of this model.
          items:
            $ref: '#/components/schemas/ScaleType'
      description: The capabilities of a base or fine tune model.
    Deployment:
      title: Deployment
      required:
      - model
      - scale_settings
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        status:
          $ref: '#/components/schemas/State'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        updated_at:
          type: integer
          description: A timestamp when this job or item was modified last (in unix
            epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        model:
          minLength: 1
          type: string
          description: The OpenAI model identifier (model-id) to deploy. Can be a
            base model or a fine tune.
        owner:
          type: string
          description: The owner of this deployment. For Azure OpenAI only "organization-owner"
            is supported.
          readOnly: true
        scale_settings:
          $ref: '#/components/schemas/ScaleSettings'
        error:
          $ref: '#/components/schemas/Error'
      description: Deployments manage the reserved quota for Azure OpenAI models and
        make them available for inference requests.
    DeploymentList:
      title: DeploymentList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Deployment'
      description: Represents a list of deployments.
    DeploymentUpdate:
      title: DeploymentUpdate
      type: object
      properties:
        model:
          type: string
          description: The new OpenAI model identifier (model-id) to be used for this
            deployment. Can be a base model or a fine tune.
        scale_settings:
          $ref: '#/components/schemas/ScaleSettingsUpdate'
      description: Defines changes to the deployment.
    Deprecation:
      title: Deprecation
      required:
      - inference
      type: object
      properties:
        fine_tune:
          type: integer
          description: The end date of fine tune support of this model. Will be `null`
            for fine tune models.
          format: unixtime
        inference:
          type: integer
          description: The end date of inference support of this model.
          format: unixtime
      description: "Defines the dates of deprecation for the different use cases of\
        \ a model.\r\nUsually base models support 1 year of fine tuning after creation.\
        \ Inference is typically supported 2 years after creation of base or\r\nfine\
        \ tuned models. The exact dates are specified in the properties."
    Error:
      title: Error
      required:
      - code
      - message
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          minLength: 1
          type: string
          description: The message of this error.
        target:
          type: string
          description: The location where the error happened if available.
        details:
          type: array
          description: The error details if available.
          items:
            $ref: '#/components/schemas/Error'
        innererror:
          $ref: '#/components/schemas/InnerError'
      description: "Error content as defined in the Microsoft REST guidelines\r\n\
        (https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
    ErrorCode:
      title: ErrorCode
      type: string
      description: "Error codes as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
      enum:
      - conflict
      - invalidPayload
      - forbidden
      - notFound
      - unexpectedEntityState
      - itemDoesAlreadyExist
      - serviceUnavailable
      - internalFailure
      - quotaExceeded
      - jsonlValidationFailed
      - fileImportFailed
      x-ms-enum:
        name: ErrorCode
        modelAsString: true
        values:
        - value: conflict
          description: The requested operation conflicts with the current resource
            state.
        - value: invalidPayload
          description: The request data is invalid for this operation.
        - value: forbidden
          description: The operation is forbidden for the current user/api key.
        - value: notFound
          description: The resource is not found.
        - value: unexpectedEntityState
          description: The operation cannot be executed in the current resource's
            state.
        - value: itemDoesAlreadyExist
          description: The item does already exist.
        - value: serviceUnavailable
          description: The service is currently not available.
        - value: internalFailure
          description: Internal error. Please retry.
        - value: quotaExceeded
          description: Quota exceeded.
        - value: jsonlValidationFailed
          description: Validation of jsonl data failed.
        - value: fileImportFailed
          description: Import of file failed.
    ErrorResponse:
      title: ErrorResponse
      required:
      - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
      description: "Error response as defined in the Microsoft REST guidelines\r\n\
        (https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
    Event:
      title: Event
      required:
      - created_at
      - level
      - message
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        created_at:
          type: integer
          description: A timestamp when this event was created (in unix epochs).
          format: unixtime
        level:
          $ref: '#/components/schemas/LogLevel'
        message:
          minLength: 1
          type: string
          description: "The message describing the event. This can be a change of\
            \ state, e.g., enqueued, started, failed or completed, or other events\
            \ like uploaded results."
    EventList:
      title: EventList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Event'
      description: Represents a list of events.
    File:
      title: File
      required:
      - filename
      - purpose
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        status:
          $ref: '#/components/schemas/State'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        updated_at:
          type: integer
          description: A timestamp when this job or item was modified last (in unix
            epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        bytes:
          type: integer
          description: "The size of this file when available (can be null). File sizes\
            \ larger than 2^53-1 are not supported to ensure compatibility\r\nwith\
            \ JavaScript integers."
          format: int64
          readOnly: true
        purpose:
          $ref: '#/components/schemas/Purpose'
        filename:
          minLength: 1
          type: string
          description: The name of the file.
        statistics:
          $ref: '#/components/schemas/FileStatistics'
        error:
          $ref: '#/components/schemas/Error'
      description: A file is a document usable for training and validation. It can
        also be a service generated document with result details.
    FileImport:
      title: FileImport
      required:
      - content_url
      - filename
      - purpose
      type: object
      properties:
        purpose:
          $ref: '#/components/schemas/Purpose'
        filename:
          minLength: 1
          type: string
          description: "The name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/)\
            \ file to be uploaded.\r\nIf the `purpose` is set to \"fine-tune\", each\
            \ line is a JSON record with \"prompt\" and \"completion\" fields representing\
            \ your training examples."
        content_url:
          type: string
          description: The url to download the document from (can be SAS url of a
            blob or any other external url accessible with a GET request).
          format: url
      description: Defines a document to import from an external content url to be
        usable with Azure OpenAI.
    FileList:
      title: FileList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/File'
      description: Represents a list of files.
    FileStatistics:
      title: FileStatistics
      type: object
      properties:
        tokens:
          type: integer
          description: The number of tokens used in prompts and completions for files
            of kind "fine-tune" once validation of file content is complete.
          format: int32
        examples:
          type: integer
          description: The number of contained training examples in files of kind
            "fine-tune" once validation of file content is complete.
          format: int32
      description: A file is a document usable for training and validation. It can
        also be a service generated document with result details.
    FineTune:
      title: FineTune
      required:
      - model
      - training_files
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        status:
          $ref: '#/components/schemas/State'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        updated_at:
          type: integer
          description: A timestamp when this job or item was modified last (in unix
            epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        model:
          minLength: 1
          type: string
          description: The identifier (model-id) of the base model used for the fine-tune.
        fine_tuned_model:
          type: string
          description: "The identifier (model-id) of the resulting fine tuned model.\
            \ This property is only populated for successfully completed fine-tune\
            \ runs.\r\nUse this identifier to create a deployment for inferencing."
        training_files:
          type: array
          description: The file identities (file-id) that are used for training the
            fine tuned model.
          items:
            $ref: '#/components/schemas/File'
        validation_files:
          type: array
          description: The file identities (file-id) that are used to evaluate the
            fine tuned model during training.
          items:
            $ref: '#/components/schemas/File'
        result_files:
          type: array
          description: "The result file identities (file-id) containing training and\
            \ evaluation metrics in csv format.\r\nThe file is only available for\
            \ successfully completed fine-tune runs."
          items:
            $ref: '#/components/schemas/File'
        events:
          type: array
          description: "The events that show the progress of the fine-tune run including\
            \ queued, running and completed."
          items:
            $ref: '#/components/schemas/Event'
        organisation_id:
          type: string
          description: The organisation id of this fine tune job. Unused on Azure
            OpenAI; compatibility for OpenAI only.
        user_id:
          type: string
          description: The user id of this fine tune job. Unused on Azure OpenAI;
            compatibility for OpenAI only.
        hyperparams:
          $ref: '#/components/schemas/HyperParameters'
        suffix:
          type: string
          description: The suffix used to identify the fine-tuned model.
        error:
          $ref: '#/components/schemas/Error'
      description: Fine tuning is a job to tailor a model to specific training data.
    FineTuneCreation:
      title: FineTuneCreation
      required:
      - model
      - training_file
      type: object
      properties:
        model:
          minLength: 1
          type: string
          description: The identifier (model-id) of the base model used for this fine-tune.
        training_file:
          minLength: 1
          type: string
          description: The file identity (file-id) that is used for training this
            fine tuned model.
        validation_file:
          type: string
          description: The file identity (file-id) that is used to evaluate the fine
            tuned model during training.
        suffix:
          type: string
          description: "The suffix used to identify the fine-tuned model. The suffix\
            \ can contain up to 40 characters (a-z, A-Z, 0-9,- and _) that will be\
            \ added to your fine-tuned model name."
        n_epochs:
          type: integer
          description: The number of epochs to train the model for. An epoch refers
            to one full cycle through the training dataset.
          format: int32
        batch_size:
          type: integer
          description: "The batch size to use for training. The batch size is the\
            \ number of training examples used to train a single forward and backward\
            \ pass.\r\nIn general, we've found that larger batch sizes tend to work\
            \ better for larger datasets.\r\nThe default value as well as the maximum\
            \ value for this property are specific to a base model."
          format: int32
        learning_rate_multiplier:
          type: number
          description: "The learning rate multiplier to use for training. The fine-tuning\
            \ learning rate is the original learning rate used for pre-training multiplied\
            \ by this value.\r\nLarger learning rates tend to perform better with\
            \ larger batch sizes.\r\nWe recommend experimenting with values in the\
            \ range 0.02 to 0.2 to see what produces the best results."
          format: double
        prompt_loss_weight:
          type: number
          description: "The weight to use for loss on the prompt tokens. This controls\
            \ how much the model tries to learn to generate the prompt\r\n(as compared\
            \ to the completion which always has a weight of 1.0), and can add a stabilizing\
            \ effect to training when completions are short.\r\nIf prompts are extremely\
            \ long (relative to completions), it may make sense to reduce this weight\
            \ so as to avoid over-prioritizing learning the prompt."
          format: double
        compute_classification_metrics:
          type: boolean
          description: "A value indicating whether to compute classification metrics.\r\
            \nIf set, we calculate classification-specific metrics such as accuracy\
            \ and F-1 score using the validation set at the end of every epoch.\r\n\
            These metrics can be viewed in the results file. In order to compute classification\
            \ metrics, you must provide a validation_file.Additionally,\r\nyou must\
            \ specify classification_n_classes for multiclass classification or classification_positive_class\
            \ for binary classification."
        classification_n_classes:
          type: integer
          description: "The number of classes in a classification task.\r\nThis parameter\
            \ is required for multiclass classification."
          format: int32
        classification_positive_class:
          type: string
          description: "The positive class in binary classification.\r\nThis parameter\
            \ is needed to generate precision, recall, and F1 metrics when doing binary\
            \ classification."
        classification_betas:
          type: array
          description: "The classification beta values. If this is provided, we calculate\
            \ F-beta scores at the specified beta values.\r\nThe F-beta score is a\
            \ generalization of F-1 score. This is only used for binary classification.\r\
            \nWith a beta of 1 (i.e.the F-1 score), precision and recall are given\
            \ the same weight.\r\nA larger beta score puts more weight on recall and\
            \ less on precision. A smaller beta score puts more weight on precision\
            \ and less on recall."
          items:
            type: number
            format: double
      description: Defines the values of a fine tune job.
    FineTuneList:
      title: FineTuneList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/FineTune'
      description: Represents a list of fine tunes.
    HyperParameters:
      title: HyperParameters
      type: object
      properties:
        batch_size:
          type: integer
          description: "The batch size to use for training. The batch size is the\
            \ number of training examples used to train a single forward and backward\
            \ pass.\r\nIn general, we've found that larger batch sizes tend to work\
            \ better for larger datasets.\r\nThe default value as well as the maximum\
            \ value for this property are specific to a base model."
          format: int32
        learning_rate_multiplier:
          type: number
          description: "The learning rate multiplier to use for training. The fine-tuning\
            \ learning rate is the original learning rate used for pre-training multiplied\
            \ by this value.\r\nLarger learning rates tend to perform better with\
            \ larger batch sizes.\r\nWe recommend experimenting with values in the\
            \ range 0.02 to 0.2 to see what produces the best results."
          format: double
        n_epochs:
          type: integer
          description: The number of epochs to train the model for. An epoch refers
            to one full cycle through the training dataset.
          format: int32
        prompt_loss_weight:
          type: number
          description: "The weight to use for loss on the prompt tokens. This controls\
            \ how much the model tries to learn to generate the prompt\r\n(as compared\
            \ to the completion which always has a weight of 1.0), and can add a stabilizing\
            \ effect to training when completions are short.\r\nIf prompts are extremely\
            \ long (relative to completions), it may make sense to reduce this weight\
            \ so as to avoid over-prioritizing learning the prompt."
          format: double
        compute_classification_metrics:
          type: boolean
          description: "A value indicating whether to compute classification metrics.\r\
            \nIf set, we calculate classification-specific metrics such as accuracy\
            \ and F-1 score using the validation set at the end of every epoch.\r\n\
            These metrics can be viewed in the results file. In order to compute classification\
            \ metrics, you must provide a validation_file.Additionally,\r\nyou must\
            \ specify classification_n_classes for multiclass classification or classification_positive_class\
            \ for binary classification."
        classification_n_classes:
          type: integer
          description: "The number of classes in a classification task.\r\nThis parameter\
            \ is required for multiclass classification."
          format: int32
        classification_positive_class:
          type: string
          description: "The positive class in binary classification.\r\nThis parameter\
            \ is needed to generate precision, recall, and F1 metrics when doing binary\
            \ classification."
        classification_betas:
          type: array
          description: "The classification beta values. If this is provided, we calculate\
            \ F-beta scores at the specified beta values.\r\nThe F-beta score is a\
            \ generalization of F-1 score. This is only used for binary classification.\r\
            \nWith a beta of 1 (i.e.the F-1 score), precision and recall are given\
            \ the same weight.\r\nA larger beta score puts more weight on recall and\
            \ less on precision. A smaller beta score puts more weight on precision\
            \ and less on recall."
          items:
            type: number
            format: double
      description: The hyper parameter settings used in a fine tune job.
    InnerError:
      title: InnerError
      type: object
      properties:
        code:
          $ref: '#/components/schemas/InnerErrorCode'
        innererror:
          $ref: '#/components/schemas/InnerError'
      description: "Inner error as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
    InnerErrorCode:
      title: InnerErrorCode
      type: string
      description: "Inner error codes as defined in the Microsoft REST guidelines\r\
        \n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses)."
      enum:
      - invalidPayload
      x-ms-enum:
        name: InnerErrorCode
        modelAsString: true
        values:
        - value: invalidPayload
          description: The request data is invalid for this operation.
    LifeCycleStatus:
      title: LifeCycleStatus
      type: string
      description: "The life cycle status of a model.\r\nNote: A model can be promoted\
        \ from \"preview\" to \"generally-available\", but never from \"generally-available\"\
        \ to \"preview\"."
      enum:
      - preview
      - generally-available
      x-ms-enum:
        name: LifeCycleStatus
        modelAsString: true
        values:
        - value: preview
          description: Model is in preview and covered by the service preview terms.
        - value: generally-available
          description: Model is generally available.
    LogLevel:
      title: LogLevel
      type: string
      description: The verbosity level of an event.
      enum:
      - info
      - warning
      - error
      x-ms-enum:
        name: LogLevel
        modelAsString: true
        values:
        - value: info
          description: This event is for information only.
        - value: warning
          description: This event represents a mitigated issue.
        - value: error
          description: This message represents a non recoverable issue.
    ManualScaleSettings:
      title: ManualScaleSettings
      required:
      - capacity
      properties:
        capacity:
          type: integer
          description: The constant reserved capacity of the inference endpoint for
            this deployment.
          format: int32
      description: Settings for the manual scale type.
      allOf:
      - $ref: '#/components/schemas/ScaleSettings'
      x-ms-discriminator-value: manual
    ManualScaleSettingsUpdate:
      title: ManualScaleSettingsUpdate
      properties:
        capacity:
          type: integer
          description: The constant reserved capacity of the inference endpoint for
            this deployment.
          format: int32
      description: Settings for the manual scale type.
      allOf:
      - $ref: '#/components/schemas/ScaleSettingsUpdate'
      x-ms-discriminator-value: manual
    Model:
      title: Model
      required:
      - capabilities
      - deprecation
      - lifecycle_status
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        status:
          $ref: '#/components/schemas/State'
        created_at:
          type: integer
          description: A timestamp when this job or item was created (in unix epochs).
          format: unixtime
          readOnly: true
        updated_at:
          type: integer
          description: A timestamp when this job or item was modified last (in unix
            epochs).
          format: unixtime
          readOnly: true
        id:
          type: string
          description: The identity of this item.
          readOnly: true
        model:
          type: string
          description: The base model identity (model-id) if this is a fine tune model;
            otherwise `null`.
        fine_tune:
          type: string
          description: The fine tune job identity (fine-tune-id) if this is a fine
            tune model; otherwise `null`.
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        lifecycle_status:
          $ref: '#/components/schemas/LifeCycleStatus'
        deprecation:
          $ref: '#/components/schemas/Deprecation'
      description: A model is either a base model or the result of a successful fine
        tune job.
    ModelList:
      title: ModelList
      type: object
      properties:
        object:
          $ref: '#/components/schemas/TypeDiscriminator'
        data:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Model'
      description: Represents a list of models.
    Purpose:
      title: Purpose
      type: string
      description: The intended purpose of the uploaded documents. Use "fine-tune"
        for fine-tuning. This allows us to validate the format of the uploaded file.
      enum:
      - fine-tune
      - fine-tune-results
      x-ms-enum:
        name: Purpose
        modelAsString: true
        values:
        - value: fine-tune
          description: This file contains training data for a fine tune job.
        - value: fine-tune-results
          description: This file contains the results of a fine tune job.
    ScaleSettings:
      title: ScaleSettings
      required:
      - scale_type
      type: object
      properties:
        scale_type:
          $ref: '#/components/schemas/ScaleType'
      description: The scale settings of a deployment. It defines the modes for scaling
        and the reserved capacity.
      discriminator:
        propertyName: scale_type
    ScaleSettingsUpdate:
      title: ScaleSettingsUpdate
      required:
      - scale_type
      type: object
      properties:
        scale_type:
          $ref: '#/components/schemas/ScaleType'
      description: The scale settings of a deployment. It defines the modes for scaling
        and the reserved capacity.
      discriminator:
        propertyName: scale_type
    ScaleType:
      title: ScaleType
      type: string
      description: Defines how scaling operations will be executed.
      enum:
      - manual
      - standard
      x-ms-enum:
        name: ScaleType
        modelAsString: true
        values:
        - value: manual
          description: Scaling of a deployment will happen by manually specifying
            the capacity of a model.
        - value: standard
          description: Scaling of a deployment will happen automatically based on
            usage.
    StandardScaleSettings:
      title: StandardScaleSettings
      description: Settings for the standard scale type.
      allOf:
      - $ref: '#/components/schemas/ScaleSettings'
      x-ms-discriminator-value: standard
    State:
      title: State
      type: string
      description: The state of a job or item.
      enum:
      - notRunning
      - running
      - succeeded
      - canceled
      - failed
      - deleted
      x-ms-enum:
        name: State
        modelAsString: true
        values:
        - value: notRunning
          description: The operation was created and is not queued to be processed
            in the future.
        - value: running
          description: The operation has started to be processed.
        - value: succeeded
          description: The operation has successfully be processed and is ready for
            consumption.
        - value: canceled
          description: The operation has been canceled and is incomplete.
        - value: failed
          description: The operation has completed processing with a failure and cannot
            be further consumed.
        - value: deleted
          description: The entity has been deleted but may still be referenced by
            other entities predating the deletion.
    TypeDiscriminator:
      title: TypeDiscriminator
      type: string
      description: Defines the type of an object.
      enum:
      - list
      - fine-tune
      - file
      - fine-tune-event
      - model
      - deployment
      x-ms-enum:
        name: TypeDiscriminator
        modelAsString: true
        values:
        - value: list
          description: This object represents a list of other objects.
        - value: fine-tune
          description: This object represents a fine tune job.
        - value: file
          description: This object represents a file.
        - value: fine-tune-event
          description: This object represents an event of a fine tune job.
        - value: model
          description: This object represents a model (can be a base models or fine
            tune job result).
        - value: deployment
          description: This object represents a deployment.
  parameters:
    endpoint:
      name: endpoint
      in: path
      description: "Supported Cognitive Services endpoints (protocol and hostname,\
        \ for example: https://aoairesource.openai.azure.com. Replace \"aoairesource\"\
        \ with your Azure OpenAI account name)."
      required: true
      schema:
        type: string
        format: url
        x-ms-skip-url-encoding: true
        x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
    apiVersionQueryParameter:
      name: api-version
      in: query
      description: The requested API version.
      required: true
      schema:
        type: string
        x-ms-client-default: 2022-12-01
        x-ms-parameter-location: client
      x-ms-client-default: 2022-12-01
      x-ms-parameter-location: client
  securitySchemes:
    api-key:
      type: apiKey
      description: Provide your Cognitive Services Azure OpenAI account key here.
      name: api-key
      in: header
x-ms-parameterized-host:
  hostTemplate: "{endpoint}/openai"
  useSchemePrefix: false
  parameters:
  - $ref: '#/components/schemas/parameters/endpoint'
x-original-swagger-version: "2.0"
